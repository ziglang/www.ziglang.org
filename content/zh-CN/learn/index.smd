---
.title = "学习",
.author = "",
.date = @date("2024-08-07:00:00:00"),
.layout = "learn.shtml",
.custom = {
	"mobile_menu_title": "学习",
},
---
# [学习 Zig]($section.id('learn'))
本节列出了从对 Zig 一无所知到理解其哲学的有用资源。


## [指南]($section.id('guides'))
这一部分最终将连同 Zig 的标准库文档一起打包，但在此期间，你可以从这里浏览。

- [Zig 构建系统](./build-system/)  
Zig 构建系统的介绍。

## 介绍
这些都是针对不同背景的程序员对 Zig 的介绍。

- [深入了解](./overview/)  
从系统编程的角度对 Zig 进行深入的功能了解。
- [有了 C++、D 和 Rust，为什么还需要 Zig？](./why_zig_rust_d_cpp/)  
针对 C++、D 和 Rust 程序员的 Zig 介绍。
- [代码范例](./samples/)  
一些可以让你感受 Zig 的代码片段。
- [工具](./tools/)  
一些可以帮助你编写 Zig 代码的有用工具列表。


## 快速入门
如果你已经准备好开始用 Zig 编程，本指南将帮助你设置你的环境。

- [快速入门](./getting-started)

## 在线学习资源
- [zig.guide](https://zig.guide)  
Zig 的结构化介绍，由 [Sobeston](https://github.com/sobeston) 编写。
- [Ziglings](https://ziglings.org)  
通过修补与调试一系列带有故障的小程序来学习 Zig。
- [Zig on Exercism](https://exercism.org/tracks/zig)  
解决编程练习并通过指导培养对 Zig 的熟练度。
- [Learning Zig](https://www.openmymind.net/learning_zig/)  
适合来自垃圾收集语言开发者的 Zig 简短介绍。

## 相关视频和博客文章
- [Zig 1.0 之路（英文）](https://www.youtube.com/watch?v=Gv2I7qTux7g) [video]  
[Andrew Kelley](https://andrewkelley.me) 介绍 Zig 及其理念的视频。
- [Zig 与 LLVM 的新关系（英文）](https://kristoff.it/blog/zig-new-relationship-llvm/)  
一篇关于构建 Zig 自托管编译器的博客文章，也被[ lwn.net 的一篇文章（英文）](https://lwn.net/Articles/833400/)所介绍。
