---
.title = "代码范例",
.author = "",
.date = @date("2024-08-07:00:00:00"),
.layout = "page.shtml",
.custom = {
	"mobile_menu_title": "代码范例",
	"toc": true,
},
---

# [Hello world]($heading.id('hello'))
A minimal example printing hello world.

[]($code.language('=html').buildAsset("samples/hello-world.zig"))

# [调用外部库函数]($heading.id('ext'))
所有的系统 API 函数都可以通过这种方式调用，您不需要库绑定来与它们交互。

[]($code.language('=html').buildAsset("samples/windows-msgbox.zig"))

# [内存泄露检测]($heading.id('leak'))
使用 `std.heap.GeneralPurposeAllocator` 来检测双重释放和内存泄露。

[]($code.language('=html').buildAsset("samples/memory-leak.zig"))


# [C 互操作性]($heading.id('c-interop'))
导入 C 头文件并链接到 libc 和 raylib 的示例。

[]($code.language('=html').buildAsset("samples/c-interop.zig"))


# [Zigg Zagg]($heading.id('zigg-zagg'))
Zig 已为代码面试做了*优化*（并没有）。

[]($code.language('=html').buildAsset("samples/ziggzagg.zig"))


# [泛型]($heading.id('generic'))
在 Zig 中，类型是编译期的值，我们使用返回类型的函数来实现泛型算法和数据结构。在此示例中，我们实现了一个简单的泛型队列并测试其行为。

[]($code.language('=html').buildAsset("samples/generic-type.zig"))


# [在 Zig 中使用 cURL]($heading.id('curl'))

[]($code.language('=html').buildAsset("samples/curl.zig"))
